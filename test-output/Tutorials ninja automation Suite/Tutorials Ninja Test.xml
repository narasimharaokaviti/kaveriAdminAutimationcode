<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAPTOP-OS77LBS0" failures="0" tests="11" name="Tutorials Ninja Test" time="3.166" errors="0" timestamp="2023-04-03T09:44:31 IST">
  <testcase classname="com.tutorialsninja.qa.testcases.Register" name="@BeforeMethod setup" time="1.996">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no &amp;apos;moz:firefoxOptions.binary&amp;apos; capability provided, and no binary flag set on the command line 
Host info: host: &amp;apos;LAPTOP-OS77LBS0&amp;apos;, ip: &amp;apos;192.168.0.154&amp;apos;
Build info: version: &amp;apos;4.5.2&amp;apos;, revision: &amp;apos;702c64f787c&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;18.0.1.1&amp;apos;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no 'moz:firefoxOptions.binary' capability provided, and no binary flag set on the command line 
Host info: host: 'LAPTOP-OS77LBS0', ip: '192.168.0.154'
Build info: version: '4.5.2', revision: '702c64f787c'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.1.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:148)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:106)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:130)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:111)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:101)
at com.tutorialsninja.qa.base.Base.initializeBrowserAndOpenApplicationURL(Base.java:55)
at com.tutorialsninja.qa.testcases.Register.setup(Register.java:28)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.tutorialsninja.qa.testcases.Register" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.tutorialsninja.qa.testcases.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.tutorialsninja.qa.testcases.Register" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.tutorialsninja.qa.testcases.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.tutorialsninja.qa.testcases.Register" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.tutorialsninja.qa.testcases.Register" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.tutorialsninja.qa.testcases.Register" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="@BeforeMethod setup" time="0.512">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no &amp;apos;moz:firefoxOptions.binary&amp;apos; capability provided, and no binary flag set on the command line 
Host info: host: &amp;apos;LAPTOP-OS77LBS0&amp;apos;, ip: &amp;apos;192.168.0.154&amp;apos;
Build info: version: &amp;apos;4.5.2&amp;apos;, revision: &amp;apos;702c64f787c&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;18.0.1.1&amp;apos;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no 'moz:firefoxOptions.binary' capability provided, and no binary flag set on the command line 
Host info: host: 'LAPTOP-OS77LBS0', ip: '192.168.0.154'
Build info: version: '4.5.2', revision: '702c64f787c'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.1.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:148)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:106)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:130)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:111)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:101)
at com.tutorialsninja.qa.base.Base.initializeBrowserAndOpenApplicationURL(Base.java:55)
at com.tutorialsninja.qa.testcases.Login.setup(Login.java:31)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.tutorialsninja.qa.testcases.Register" name="verifyRegisteringAnAccountWithMandatoryFields" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisteringAnAccountWithMandatoryFields -->
  <testcase classname="com.tutorialsninja.qa.testcases.Register" name="verifyRegisteringAccountByProvidingAllFields" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountByProvidingAllFields -->
  <testcase classname="com.tutorialsninja.qa.testcases.Register" name="verifyRegisteringAccountWithExistingEmailAddress" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountWithExistingEmailAddress -->
  <testcase classname="com.tutorialsninja.qa.testcases.Register" name="verifyRegisteringAccountWithoutFillingAnyDetails" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountWithoutFillingAnyDetails -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="verifyLoginWithValidCredentials" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithValidCredentials -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="verifyLoginWithValidCredentials" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithValidCredentials -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="verifyLoginWithValidCredentials" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithValidCredentials -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="verifyLoginWithInvalidCredentials" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithInvalidCredentials -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="verifyLoginWithInvalidEmailAndValidPassword" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithInvalidEmailAndValidPassword -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="verifyLoginValidEmailAndInvalidPassowrd" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginValidEmailAndInvalidPassowrd -->
  <testcase classname="com.tutorialsninja.qa.testcases.Login" name="verifyLoginWithoutProvidingCredentials" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithoutProvidingCredentials -->
</testsuite> <!-- Tutorials Ninja Test -->
